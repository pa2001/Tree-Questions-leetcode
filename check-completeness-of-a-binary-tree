/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCompleteTree(TreeNode* root) {
        queue<TreeNode*>q;
        q.push(root);
        vector<int> v;
        while(!q.empty())
        {
            int s=q.size();
            for(int i=0;i<s;i++)
            {
                TreeNode* temp=q.front();
                q.pop();
                if(temp==NULL)
                {
                    v.push_back(0);
                    continue;
                }
                v.push_back(temp->val);
                  q.push(temp->left); 
                  q.push(temp->right);
            }
        }
        int f=1;
        for(int i=v.size()-1;i>=0;i--)
        {
            if(v[i]!=0)
            {
                f=0;
            }
            else if(f==0 && v[i]==0)
            {
                return false;
            }
        }
        return true;
    }
};
