/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    unordered_map<int,int>m;
    vector<int>v;
    void solve(TreeNode* root)
    {
        if(root==NULL)
            return;
        m[root->val]++;
        solve(root->left);
        solve(root->right);
    }
    vector<int> findMode(TreeNode* root) {
        solve(root);
        int k=0;
        for(auto x:m)
        {
            if(x.second>=k)
            {
                k=x.second;
            }
        }
        for(auto x:m)
        {
            if(x.second==k)
            {
                v.push_back(x.first);
            }
        }
        return v;
    }
};
