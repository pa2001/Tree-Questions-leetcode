/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    long long ans=INT_MIN,sum=0,mod=1000000007;
    void solve(TreeNode* root)
    {
        if(!root)
            return;
        sum+=root->val;
        solve(root->left);
        solve(root->right);
    }
    long long helper(TreeNode* root,int &curr)
    {
        if(!root)
            return 0;
        long long left=helper(root->left,curr);
        long long right=helper(root->right,curr);
        curr=left+right+root->val;
        ans=max(ans,curr*(sum-curr));
        return curr;
    }
    int maxProduct(TreeNode* root) {
        if(!root)
            return 0;
        int curr=0;
        solve(root);
        cout<<sum<<endl;
        helper(root,curr);
        return ans%mod;
    }
};
