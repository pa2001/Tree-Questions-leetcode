/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(!root)
            return 0;
       queue<pair<unsigned long long,TreeNode*>>q;
        q.push({0,root});
        unsigned long long ans=1;
        while(!q.empty())
        {
            unsigned long long n=q.size();
            unsigned long long left=q.front().first;
            unsigned long long right=left;
            for(int i=0;i<n;i++)
            {
                auto temp=q.front();
                q.pop();
                right=temp.first;
                if(temp.second->left)
                    q.push({2*right+1,temp.second->left});
                if(temp.second->right)
                    q.push({2*right+2,temp.second->right});
            }
            ans=max(ans,(right-left+1));
        }return ans;
    }
};
