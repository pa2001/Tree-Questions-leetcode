class Solution {
public:
    vector<int> findMinHeightTrees(int n, vector<vector<int>>& edges) {
        vector<vector<int>>adj(n);
        vector<int>degree(n,0);
        for(int i=0;i<edges.size();i++){
            adj[edges[i][0]].push_back(edges[i][1]);
            adj[edges[i][1]].push_back(edges[i][0]);
            degree[edges[i][0]]++;
            degree[edges[i][1]]++;
        }
        vector<int>leaves;
        for(int i=0;i<n;i++)
        {
            if(degree[i]<=1)
            {
                degree[i]=0;
                leaves.push_back(i);
            }
        }
        int total_leaves=leaves.size();
        while(total_leaves<n)
        {
            vector<int>newleaves;
            for(auto leaf:leaves)
            {
                for(auto node:adj[leaf])
                {
                    degree[node]--;
                    if(degree[node]==1)
                        newleaves.push_back(node);
                }
            }
            total_leaves+=newleaves.size();
            leaves=newleaves;
        }return leaves;
    }
};
