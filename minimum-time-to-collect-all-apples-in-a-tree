class Solution {
public:
    vector<int>adj[100005];
    vector<bool>fruits;
    pair<int,int>dfs(int node,int p)
    {
        pair<int,int>v={0,fruits[node]};
        for(auto x:adj[node])
        {
            if(x!=p)
            {
                auto i=dfs(x,node);
                v.first+=(2+i.first)*(i.second);
                v.second|=i.second;
            }
        }return v;
    }
    int minTime(int n, vector<vector<int>>& edges, vector<bool>& hasApple) {
        for(int i=0;i<edges.size();i++)
        {
           adj[edges[i][0]].push_back(edges[i][1]);
           adj[edges[i][1]].push_back(edges[i][0]);
        }fruits=hasApple;
        return dfs(0,0).first;
    }
};
