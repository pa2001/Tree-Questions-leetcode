/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool ispalindrom(vector<int>&v)
    {
        int odd=0;
        for(int i=1;i<=9;i++)
        {
            if(v[i]%2)
                odd++;
            if(odd>1)
                return false;
        }return true;
    }
    void solve(TreeNode* root,vector<int>&v,int &count)
    {
        if(!root)
            return;
        v[root->val]++;
          if(root->left==NULL&&root->right==NULL)
          {
              if(ispalindrom(v))
                  count++;
          }
          solve(root->left,v,count);
          solve(root->right,v,count);
          v[root->val]--;
    }
    int pseudoPalindromicPaths (TreeNode* root) {
        vector<int>v(10,0);
        int count=0;
        solve(root,v,count);
        return count;
    }
};
