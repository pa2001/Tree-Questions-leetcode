/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode *root, unordered_set<int> &s)
    {
        if(root==NULL) return;
        s.insert(root->val);
        helper(root->left,s);
        helper(root->right,s);
    }
    int findSecondMinimumValue(TreeNode* root) {
        unordered_set<int>s;
        int ans=-1;
        helper(root,s);
        priority_queue<int,vector<int>,std::greater<int>>pq(s.begin(),s.end());
        int k=2;
        while(k!=0 && pq.size()!=0){
            ans=pq.top();
            pq.pop();
            k--;
        }
        if(k!=0) return -1;
        return ans;
    }
};
