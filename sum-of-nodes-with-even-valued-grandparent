/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sum=0;
    void solve(TreeNode* r)
    {
        if(!r)
            return;
        int k=r->val;
        if(k%2==0)
        {
            if(r->left)
            {
                if(r->left->left)
                    sum+=r->left->left->val;
                if(r->left->right)
                    sum+=r->left->right->val;
            }
            if(r->right)
            {
                if(r->right->left)
                    sum+=r->right->left->val;
                if(r->right->right)
                    sum+=r->right->right->val;
            }
        }
        solve(r->left);
        solve(r->right);
    }
    int sumEvenGrandparent(TreeNode* root) {
        solve(root);
        return sum;
    }
};
