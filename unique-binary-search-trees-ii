/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
     vector<TreeNode*> generateBST(int start, int end){
         vector<TreeNode*>v;
         if(start>end)
         {
             v.push_back(NULL);
             return v;
         }
         for(int i=start;i<=end;i++)
         {
             vector<TreeNode*>left=generateBST(start,i-1);
             vector<TreeNode*>right=generateBST(i+1,end);
             for(int j=0;j<left.size();j++)
             {
                 for(int k=0;k<right.size();k++)
                 {
                     TreeNode* root=new TreeNode(i,left[j],right[k]);
                     v.push_back(root);
                 }
             }
         }return v;
    }
    vector<TreeNode*> generateTrees(int n) {
        return generateBST(1,n);  
    }
};
